////杨辉三角
//#include<stdio.h>
//int arr[100][1000];
//int main()
//{
//
//	arr[0][0] = 1;
//	int n = 0;
//	int i = 0;
//	scanf("%d", &n);
//	for (i = 1; i <= n; i++)
//	{
//		arr[i][0] = 1;
//		arr[i][i] = 1;
//		int j = 0;
//		for (j = 0; j <= i; j++)
//		{
//			arr[i + 1][j] = arr[i][j] + arr[i][j - 1];
//		}
//	}
//	for (i = 0; i < n; i++)
//	{	
//		int j = 0;
//		for (j = 0; j <= i; j++)
//		{
//			printf("%d ", arr[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}

//猜凶手
//#include<stdio.h>
//int main()
//{
//	char killer = '0';
//	for (killer = 'a'; killer < 'd'; killer++)
//	{
//		if ((killer != 'a') + (killer == 'c') + (killer == 'd') + (killer != 'd') == 3)
//		{
//			printf("%c", killer);
//			break;
//		}
//	}
//	return 0;
//}

//杨氏矩阵
#include<stdio.h>
int Find(int arr[][3], int x, int y, int key)
{
	int i = 0;
	int j = y - 1;
	while (j >= 0 && i < x)
	{
		if (arr[i][j] < key)
		{
			i++;
		}
		else if (arr[i][j] > key)
		{
			j--;
		}
		else
		{
			return 1;
		}
	}
	return 0;
}
int main()
{
	int arr[3][3] = { {1,2,3},{4,5,6},{7,8,9} };
	int key = 0;
	scanf("%d", &key);
	int ret = Find(arr,3,3, key);
	printf("%d", ret);


	return 0;
}